// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250228142043_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Domain.Entities.CompteRendu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompetanceMisesEnOeuvre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Difficultes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EtapesRealisation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EtudiantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetourTuteur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TravailEntreprise")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EtudiantId");

                    b.ToTable("CompteRendus");
                });

            modelBuilder.Entity("Core.Domain.Entities.EvaluationTuteur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Commentaire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompteRenduId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateEvaluation")
                        .HasColumnType("datetime2");

                    b.Property<int>("Note")
                        .HasColumnType("int");

                    b.Property<Guid>("TuteurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompteRenduId")
                        .IsUnique();

                    b.HasIndex("TuteurId");

                    b.ToTable("EvaluationsTuteurs");
                });

            modelBuilder.Entity("Core.Domain.Entities.FicheEtudiant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EtudiantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Formation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Promotion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EtudiantId")
                        .IsUnique();

                    b.ToTable("FichesEtudiants");
                });

            modelBuilder.Entity("Core.Domain.Entities.Utilisateur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("Core.Domain.Entities.CompteRendu", b =>
                {
                    b.HasOne("Core.Domain.Entities.Utilisateur", "Etudiant")
                        .WithMany("CompteRendus")
                        .HasForeignKey("EtudiantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etudiant");
                });

            modelBuilder.Entity("Core.Domain.Entities.EvaluationTuteur", b =>
                {
                    b.HasOne("Core.Domain.Entities.CompteRendu", "CompteRendu")
                        .WithOne()
                        .HasForeignKey("Core.Domain.Entities.EvaluationTuteur", "CompteRenduId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.Entities.Utilisateur", "Tuteur")
                        .WithMany()
                        .HasForeignKey("TuteurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompteRendu");

                    b.Navigation("Tuteur");
                });

            modelBuilder.Entity("Core.Domain.Entities.FicheEtudiant", b =>
                {
                    b.HasOne("Core.Domain.Entities.Utilisateur", "Etudiant")
                        .WithOne()
                        .HasForeignKey("Core.Domain.Entities.FicheEtudiant", "EtudiantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etudiant");
                });

            modelBuilder.Entity("Core.Domain.Entities.Utilisateur", b =>
                {
                    b.Navigation("CompteRendus");
                });
#pragma warning restore 612, 618
        }
    }
}
